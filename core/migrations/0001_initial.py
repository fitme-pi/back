# Generated by Django 4.1.2 on 2022-10-27 12:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('sexo', models.CharField(blank=True, max_length=2, null=True)),
                ('data_nasc', models.DateField(blank=True, null=True)),
                ('taxa_metabolica_basal', models.PositiveIntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calorias', models.PositiveIntegerField()),
                ('gorduras', models.PositiveIntegerField()),
                ('carboidratos', models.PositiveIntegerField()),
                ('proteinas', models.PositiveIntegerField()),
                ('nome', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Comidas',
            },
        ),
        migrations.CreateModel(
            name='Exercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30)),
                ('descricao', models.CharField(max_length=255)),
                ('video_explicativo', models.CharField(max_length=45)),
            ],
            options={
                'verbose_name_plural': 'Exercícios',
            },
        ),
        migrations.CreateModel(
            name='GrupoMuscular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Grupos musculares',
            },
        ),
        migrations.CreateModel(
            name='TaxaAtividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc_atividade', models.CharField(max_length=15)),
            ],
            options={
                'verbose_name_plural': 'Taxas de atividade',
            },
        ),
        migrations.CreateModel(
            name='TipoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc_tipo', models.CharField(max_length=25)),
            ],
            options={
                'verbose_name_plural': 'Tipos de usuário',
            },
        ),
        migrations.CreateModel(
            name='Treino',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_reps', models.PositiveIntegerField()),
                ('num_series', models.PositiveIntegerField()),
                ('tempo_descanso', models.DurationField()),
                ('exercicio_idexercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.exercicio')),
                ('usuario_idusuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Treinos',
            },
        ),
        migrations.AddField(
            model_name='exercicio',
            name='grupo_muscular_idgrupo_muscular',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.grupomuscular'),
        ),
        migrations.CreateModel(
            name='Evolucao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(auto_now=True)),
                ('tempo_treino', models.DurationField()),
                ('massa', models.DecimalField(decimal_places=3, default=0, max_digits=6)),
                ('altura', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('imc', models.DecimalField(decimal_places=1, default=0, max_digits=3)),
                ('usuario_idusuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Evoluções',
            },
        ),
        migrations.CreateModel(
            name='Alimentacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calorias_dia', models.PositiveIntegerField()),
                ('gorduras_dia', models.PositiveIntegerField()),
                ('carboidratos_dia', models.PositiveIntegerField()),
                ('proteinas_dia', models.PositiveIntegerField()),
                ('comida_idcomida', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.comida')),
                ('usuario_idusuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Alimentações',
            },
        ),
        migrations.AddField(
            model_name='usuario',
            name='taxa_atividade_idtaxa_atividade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.taxaatividade'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='tipo_usuario_idtipo_usuario',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.tipousuario'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
